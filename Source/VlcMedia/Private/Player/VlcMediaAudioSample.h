// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.

#pragma once

#include "CoreTypes.h"
#include "IMediaAudioSample.h"
#include "Misc/Timespan.h"
#include "Templates/SharedPointer.h"


/**
 * Audio sample generated by VLC player.
 */
class FVlcMediaAudioSample
	: public IMediaAudioSample
{
public:

	/**
	 * Create and initialize a new instance.
	 *
	 * @param InBuffer The sample's audio buffer.
	 * @param InFrames Number of frames in the buffer.
	 * @param InChannels Number of audio channels.
	 * @param InSampleFormat The sample format.
	 * @param InSampleRate The sample rate.
	 * @param InTime The sample time (in the player's local clock).
	 * @param InTimecode The global media time code the sample was generated for.
	 * @param InDuration The duration for which the sample is valid.
	 */
	FVlcMediaAudioSample(
		const TSharedPtr<void, ESPMode::ThreadSafe>& InBuffer,
		uint32 InFrames,
		uint32 InChannels,
		EMediaAudioSampleFormat InSampleFormat,
		uint32 InSampleRate,
		FTimespan InTime,
		FTimespan InTimecode,
		FTimespan InDuration
	)
		: Buffer(InBuffer)
		, Channels(InChannels)
		, Duration(InDuration)
		, Frames(InFrames)
		, SampleFormat(InSampleFormat)
		, SampleRate(InSampleRate)
		, Time(InTime)
		, Timecode(InTimecode)
	{ }

public:

	//~ IMediaAudioSample interface

	virtual const void* GetBuffer() const override
	{
		return Buffer.Get();
	}

	virtual uint32 GetChannels() const override
	{
		return Channels;
	}

	virtual uint32 GetFrames() const override
	{
		return Frames;
	}

	virtual FTimespan GetDuration() const override
	{
		return Duration;
	}

	virtual EMediaAudioSampleFormat GetFormat() const override
	{
		return SampleFormat;
	}

	virtual uint32 GetSampleRate() const override
	{
		return SampleRate;
	}

	virtual FTimespan GetTime() const override
	{
		return Time;
	}

	virtual FTimespan GetTimecode(bool /*Locked*/) const override
	{
		return Timecode;
	}

private:

	/** The sample's frame buffer. */
	TSharedPtr<void, ESPMode::ThreadSafe> Buffer;

	/** Number of audio channels. */
	uint32 Channels;

	/** Duration for which the sample is valid. */
	FTimespan Duration;

	/** Number of frames in the buffer. */
	uint32 Frames;

	/** The sample format. */
	EMediaAudioSampleFormat SampleFormat;

	/** Audio sample rate (in samples per second). */
	uint32 SampleRate;

	/** Play time for which the sample was generated. */
	FTimespan Time;

	/** Time code at which the sample is to be displayed. */
	FTimespan Timecode;
};
